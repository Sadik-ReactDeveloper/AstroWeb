{"version":3,"sources":["components/astrology/zegocloud/VideoCall.js"],"names":["i","randomID","len","result","chars","maxPos","length","charAt","Math","floor","random","getUrlParams","url","window","location","href","urlStr","split","URLSearchParams","App","useState","timer","setTimer","toggle","setToggle","ref","useRef","history","useHistory","useEffect","current","setInterval","clearInterval","handlestartinterval","apicall","userId","JSON","parse","localStorage","getItem","astroId","sessionStorage","setItem","payload","type","axiosConfig","post","then","res","console","log","data","Fetchuserdetail","catch","err","response","message","handlestop","props","push","swal","handleStop","roomID","get","myMeeting","element","name","Userinfo","full_name","toString","kitToken","ZegoUIKitPrebuilt","generateKitTokenForTest","zp","create","userID","joinRoom","container","maxUsers","sharedLinks","protocol","host","pathname","scenario","mode","OneONoneCall","preJoinViewConfig","title","onJoinRoom","obj","astroid","videoLink","userid","error","onLeaveRoom","value","removeItem","onUserJoin","onUserLeave","showScreenSharingButton","className","getSeconds","slice","minutes","getMinutes","getHours","formatTime","style","width","height"],"mappings":"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","file":"static/js/180.817cf663.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef } from \"react\";\r\nimport axiosConfig from \"../../../axiosConfig\";\r\n// import { getUserID } from \"../astrologerdetail\";\r\nimport { ZegoUIKitPrebuilt } from \"@zegocloud/zego-uikit-prebuilt\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport swal from \"sweetalert\";\r\nimport { Fetchuserdetail } from \"../../header/IconGroup\";\r\nfunction randomID(len) {\r\n  let result = \"\";\r\n  if (result) return result;\r\n  var chars = \"12345qwertyuiopasdfgh67890jklmnbvcxzMNBVCZXASDQWERTYHGFUIOLKJP\",\r\n    maxPos = chars.length,\r\n    i;\r\n  len = len || 5;\r\n  for (i = 0; i < len; i++) {\r\n    result += chars.charAt(Math.floor(Math.random() * maxPos));\r\n  }\r\n  return result;\r\n}\r\n\r\nexport function getUrlParams(url = window.location.href) {\r\n  let urlStr = url.split(\"?\")[1];\r\n  return new URLSearchParams(urlStr);\r\n}\r\nexport default function App() {\r\n  const [timer, setTimer] = useState(0);\r\n  const [toggle, setToggle] = useState(false);\r\n  let ref = useRef();\r\n  const history = useHistory();\r\n  useEffect(() => {\r\n    if (toggle) {\r\n      ref.current = setInterval(() => setTimer(timer => timer + 1), 1000);\r\n    }\r\n    return () => {\r\n      clearInterval(ref.current);\r\n    };\r\n  }, [toggle]);\r\n  const handleStart = () => {\r\n    setToggle(true);\r\n    handlestartinterval();\r\n  };\r\n\r\n  const handlestartinterval = () => {\r\n    this.apicall.current = setInterval(() => {\r\n      let userId = JSON.parse(localStorage.getItem(\"user_id\"));\r\n      let astroId = localStorage.getItem(\"astroId\");\r\n      sessionStorage.setItem(\"typeofcall\", \"Video\");\r\n\r\n      let payload = {\r\n        userId: userId,\r\n        astroId: astroId,\r\n        // status: true,\r\n        type: \"Video\",\r\n      };\r\n      axiosConfig\r\n        .post(`/user/deductChatBalance`, payload)\r\n        .then(res => {\r\n          console.log(\"callduration\", res.data);\r\n          Fetchuserdetail();\r\n        })\r\n        .catch(err => {\r\n          console.log(err.response.data.message);\r\n          if (\r\n            err.response.data.message === \"Insufficient balance for the call\"\r\n          ) {\r\n            this.handlestop();\r\n            this.props.history.push(\"/allastrologerlist\");\r\n            swal(\"You have Low Balance\");\r\n          }\r\n        });\r\n    }, 1000);\r\n  };\r\n  const handleStop = () => {\r\n    setToggle(false);\r\n  };\r\n\r\n  const roomID = getUrlParams().get(\"roomID\") || randomID(5);\r\n  const formatTime = timer => {\r\n    const getSeconds = `0${timer % 60}`.slice(-2);\r\n    const minutes = `${Math.floor(timer / 60)}`;\r\n    const getMinutes = `0${minutes % 60}`.slice(-2);\r\n    const getHours = `0${Math.floor(timer / 3600)}`.slice(-2);\r\n\r\n    return `${getHours} : ${getMinutes} : ${getSeconds}`;\r\n  };\r\n  let myMeeting = async element => {\r\n    // generate Kit Token\r\n    const appID = 1011009319;\r\n    const name = JSON.parse(localStorage.getItem(\"userData\"));\r\n    const response = name.Userinfo?.full_name || randomID(5).toString();\r\n    const serverSecret = \"0b7c5477f07346c1a906c99d3f171f2e\";\r\n    const kitToken = ZegoUIKitPrebuilt.generateKitTokenForTest(\r\n      appID,\r\n      serverSecret,\r\n      roomID,\r\n      randomID(5).toString(),\r\n      response\r\n    );\r\n\r\n    // Create instance object from Kit Token.\r\n    const zp = ZegoUIKitPrebuilt.create(kitToken);\r\n    let userID = JSON.parse(localStorage.getItem(\"user_id\"));\r\n\r\n    // start the call\r\n\r\n    zp.joinRoom({\r\n      container: element,\r\n      maxUsers: 2,\r\n      sharedLinks: [\r\n        {\r\n          name: \"Personal link\",\r\n          url:\r\n            window.location.protocol +\r\n            \"//\" +\r\n            window.location.host +\r\n            \"/#/VideoCall\" +\r\n            window.location.pathname +\r\n            \"?roomID=\" +\r\n            roomID,\r\n        },\r\n      ],\r\n      scenario: {\r\n        mode: ZegoUIKitPrebuilt.OneONoneCall,\r\n      },\r\n      preJoinViewConfig: {\r\n        title: \"Join Astrologer Video Call\",\r\n      },\r\n\r\n      onJoinRoom: () => {\r\n        let obj = {\r\n          astroid: localStorage.getItem(\"astroId\"),\r\n          videoLink: roomID,\r\n          userid: userID,\r\n        };\r\n        axiosConfig\r\n          .post(\"/user/send_VideoLink\", obj)\r\n          .then(response => {\r\n            // console.log(response.data.data);\r\n          })\r\n          .catch(error => {\r\n            console.log(error);\r\n          });\r\n      },\r\n      onLeaveRoom: async () => {\r\n        handleStop();\r\n        let astroid = localStorage.getItem(\"astroId\");\r\n        let value = {\r\n          userId: userID,\r\n          astroId: astroid,\r\n        };\r\n        axiosConfig\r\n          .post(`/user/changeStatus`, value)\r\n          .then(res => {\r\n            console.log(\"CloneJob Stop\", res);\r\n            localStorage.removeItem(\"CurrentChat_userid\");\r\n            history.push(\"/astrorating\");\r\n          })\r\n          .catch(err => {\r\n            console.log(err.response.data);\r\n          });\r\n      },\r\n      onUserJoin: () => {\r\n        handleStart();\r\n      },\r\n      onUserLeave: async () => {\r\n        handleStop();\r\n        let astroid = localStorage.getItem(\"astroId\");\r\n        let value = {\r\n          userId: userID,\r\n          astroId: astroid,\r\n        };\r\n        axiosConfig\r\n          .post(`/user/changeStatus`, value)\r\n          .then(res => {\r\n            console.log(\"CloneJob Stop astrooo\", res);\r\n            localStorage.removeItem(\"CurrentChat_userid\");\r\n            history.push(\"/astrorating\");\r\n          })\r\n          .catch(err => {\r\n            console.log(err.response.data);\r\n          });\r\n      },\r\n\r\n      showScreenSharingButton: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\" timer\">\r\n        <div className=\"currentTime\">Current timer - {formatTime(timer)}</div>\r\n      </div>\r\n      <div\r\n        className=\"myCallContainer\"\r\n        ref={myMeeting}\r\n        style={{ width: \"100vw\", height: \"100vh\" }}\r\n      ></div>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}